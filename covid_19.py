# -*- coding: utf-8 -*-
"""COVID-19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14GtTfg2E45NqSC2IH9OnIem48UoQRcTn
"""

import pandas as pd
import requests
import datetime
from datetime import timedelta

#from google.colab import drive
from google.colab import files

#drive.mount('/content/gdrive',force_remount = True)

"""# Consumindo dados

# Ignorar
"""

def change_date(datestr):
  try:
    return datetime.datetime.strptime(datestr[0:10].strip(),"%m/%d/%Y")
  except Exception as e:
    try:
      return datetime.datetime.strptime(datestr[0:8].strip(),"%m/%d/%y")
    except Exception as e:
      try:
        return datetime.datetime.strptime(datestr[0:10].strip(),"%m/%d/%y")
      except Exception as e:
        try:
          return datetime.datetime.strptime(datestr[0:8].strip(),"%m/%d/%Y")
        except Exception as e:
          try:
            return datetime.datetime.strptime(datestr[0:10].strip(),"%Y-%m-%d")
          except Exception as e:
            try:
              return datetime.datetime.strptime(datestr[0:7].strip(),"%m/%d/%y")
            except Exception as e:
              print(e)
              return ('erro')

a = pd.DataFrame(columns = ['Last_Update','new'])

a['Last_Update'] = df['Last_Update']

a['new'] = df['Last_Update'].apply(lambda x: change_date(x))

"""# Comecando download"""

scan = True
begin_date = datetime.datetime(2020,1,22)
url = '''https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/''' + begin_date.strftime("%m-%d-%Y")+'''.csv'''
df = pd.read_csv(url)
df['Current_Date'] = begin_date
df.columns = ['Province_State','Country_Region','Last_Update','Confirmed','Deaths','Recovered','Current_Date']
cur_date = begin_date

while scan == True:
  cur_date = cur_date +  timedelta(days = 1)
  url = '''https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/''' + cur_date.strftime("%m-%d-%Y")+'''.csv'''
  print(url)
  try:
    df_ap = pd.DataFrame(columns = df.columns)
    read = pd.read_csv(url)
    if cur_date < datetime.datetime.strptime('22/03/20',"%d/%m/%y"):
      df_ap['Province_State'] = read['Province/State']
      df_ap['Country_Region'] = read ['Country/Region']
      df_ap['Last_Update']= read ['Last Update']
      df_ap['Current_Date'] = cur_date
      df_ap['Confirmed']= read ['Confirmed']
      df_ap['Deaths']= read['Deaths']
      df_ap['Recovered']= read ['Recovered']
    else:
      df_ap['Province_State'] = read['Province_State']
      df_ap['Country_Region'] = read ['Country_Region']
      df_ap['Last_Update']= read ['Last_Update']
      df_ap['Current_Date'] = cur_date
      df_ap['Confirmed']= read ['Confirmed']
      df_ap['Deaths']= read['Deaths']
      df_ap['Recovered']= read ['Recovered']
    print(pd.read_csv(url).columns)
    
  except Exception as e:
    print(e)
    scan = False
    break
  df = pd.concat([df,df_ap],axis = 0)

df = df.reset_index(drop = True)

# Nao utilizo mais
#df['Last_Update'] = df['Last_Update'].apply(lambda x: change_date(x))

df['Country_Region'] = df['Country_Region'].apply(lambda x: 'China' if( x == 'Mainland China') else x)

df = df.fillna(0)

"""# Data da Primeira infeccao"""

prim_infec = df[df['Confirmed'] > 0].groupby(['Country_Region']).agg({'Current_Date':'min'})

prim_infec.columns = ['prim_infec']

df = df.reset_index(drop = True)

df = df.merge(prim_infec,how='left',on='Country_Region')

df['dias_desde_prim'] = df.apply(lambda row: (row['Current_Date'] - row['prim_infec']).days,axis = 1)

df = df.drop_duplicates()

# Commented out IPython magic to ensure Python compatibility.
# %cd '../tmp'

# Commented out IPython magic to ensure Python compatibility.
# %ls

df.to_csv('casos_covid19.csv')

files.download('casos_covid19.csv')

